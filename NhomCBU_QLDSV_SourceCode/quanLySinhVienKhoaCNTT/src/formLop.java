
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author trannqt
 */
public class formLop extends javax.swing.JFrame {

    /**
     * Creates new form formLop
     */
//    public formLop() {
//        initComponents();
//    }
    private final LopHoc lop = new LopHoc();
    private final DefaultTableModel tableModel = new DefaultTableModel();
    private boolean check = true;
    private final Khoa khoa = new Khoa();

    public formLop() throws SQLException {
        initComponents(); // Khởi tạo các components trên JFrame
        String[] colsName = {"Mã lớp", "Tên lớp", "Sỉ số"};
        tableModel.setColumnIdentifiers(colsName);
        tableLopHoc.setModel(tableModel);
        setNull();
        setKhoa(false);
        setButton(true);
        addCombobox();
        loadFirst();
        txttenkhoa.setEnabled(false);
    }

    public void loadFirst() throws SQLException {
        ResultSet res = khoa.ShowMaKhoa();
        while (res.next()) {
            String makhoa = res.getString(1);
            ShowDataFirst(makhoa);
            System.err.println("makhoa: " + makhoa);
            break;
        }

    }

    public void addCombobox() throws SQLException {
//        Khoa khoa = new Khoa();
        ResultSet res = khoa.ShowMaKhoa();
        while (res.next()) {
//            String makhoa = khoa.getMaKhoa(res.getString(1)).toString();
            cbbMaKhoa.addItem(res.getString(1));
//            cbbMaKhoa.setSelectedItem(makhoa);
//            System.err.println("get: "+makhoa+" "+cbbMaKhoa.getSelectedItem().toString());
        }
    }

    public void showCombobox(String makhoa) throws SQLException {
        for (int i = 0; i < cbbMaKhoa.getItemCount(); i++) {
            if (cbbMaKhoa.getItemAt(i).equals(makhoa)) {
                cbbMaKhoa.setSelectedIndex(i);
                System.err.println(cbbMaKhoa.getItemAt(i) + "");
                return;
            }
        }
    }

    public void ShowDataFirst(String makhoa) throws SQLException {
        ResultSet result = lop.ShowLopHoc(makhoa);
        try {
            while (result.next()) { // nếu còn đọc tiếp được một dòng dữ liệu
                String rows[] = new String[4];
                rows[0] = result.getString(1); // lấy dữ liệu tại cột số 1 (ứng với mã hàng)
                rows[1] = result.getString(2); // lấy dữ liệu tai cột số 2 ứng với tên hàng
                rows[2] = result.getString(3);
//            rows[3] = result.getString(4); 
                tableModel.addRow(rows); // đưa dòng dữ liệu vào tableModel
                //mỗi lần có sự thay đổi dữ liệu ở tableModel thì Jtable sẽ tự động update
            }
        } catch (SQLException e) {
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableLopHoc = new javax.swing.JTable();
        btnThemLop = new javax.swing.JButton();
        btnXoaLop = new javax.swing.JButton();
        btnSuaLop = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtMaLop = new javax.swing.JTextField();
        txtTenLop = new javax.swing.JTextField();
        txtSiSoLop = new javax.swing.JTextField();
        btnLuuLop = new javax.swing.JButton();
        btnHuyLop = new javax.swing.JButton();
        btnThoat = new javax.swing.JButton();
        cbbMaKhoa = new javax.swing.JComboBox<String>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txttenkhoa = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Quản lý lớp học");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("QUẢN LÝ LỚP HỌC");

        tableLopHoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableLopHoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableLopHocMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableLopHoc);

        btnThemLop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/add-1-icon-16p.png"))); // NOI18N
        btnThemLop.setText("Thêm");
        btnThemLop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemLopActionPerformed(evt);
            }
        });

        btnXoaLop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Button-Close-icon-16p.png"))); // NOI18N
        btnXoaLop.setText("Xóa");
        btnXoaLop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaLopActionPerformed(evt);
            }
        });

        btnSuaLop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/note-edit-icon.png"))); // NOI18N
        btnSuaLop.setText("Sửa");
        btnSuaLop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaLopActionPerformed(evt);
            }
        });

        jLabel2.setText("Mã lớp");

        jLabel3.setText("Tên lớp");

        jLabel4.setText("Sỉ số");

        btnLuuLop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/floppy-icon-16.png"))); // NOI18N
        btnLuuLop.setText("Lưu");
        btnLuuLop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuLopActionPerformed(evt);
            }
        });

        btnHuyLop.setIcon(new javax.swing.ImageIcon("C:\\Users\\PC\\Desktop\\icons\\arrow-return-180-left-icon.png")); // NOI18N
        btnHuyLop.setText("Hủy ");
        btnHuyLop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyLopActionPerformed(evt);
            }
        });

        btnThoat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/clipboard-sign-out-icon-16.png"))); // NOI18N
        btnThoat.setText("Thoát");
        btnThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThoatActionPerformed(evt);
            }
        });

        cbbMaKhoa.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbbMaKhoaItemStateChanged(evt);
            }
        });

        jLabel5.setText("Mã khoa:");

        jLabel6.setText("Khoa");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(217, 217, 217)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnLuuLop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnHuyLop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnThoat)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSuaLop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnXoaLop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnThemLop))
                        .addGap(2, 2, 2)))
                .addGap(18, 18, 18))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbbMaKhoa, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txttenkhoa, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMaLop)
                            .addComponent(txtSiSoLop)
                            .addComponent(txtTenLop))))
                .addGap(85, 85, 85))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnHuyLop, btnLuuLop, btnSuaLop, btnThemLop, btnThoat, btnXoaLop});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbbMaKhoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(txttenkhoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtMaLop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTenLop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSiSoLop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnThemLop)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnXoaLop)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSuaLop)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnLuuLop)
                        .addGap(6, 6, 6)
                        .addComponent(btnHuyLop)
                        .addGap(7, 7, 7)
                        .addComponent(btnThoat)))
                .addContainerGap(67, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnHuyLop, btnLuuLop, btnSuaLop, btnThemLop, btnThoat, btnXoaLop});

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    //Ham do du lieu vao tableModel
    public void ShowData(String makhoa) throws SQLException {
        ResultSet result = lop.ShowLopHoc(makhoa);
        try {
            while (result.next()) { // nếu còn đọc tiếp được một dòng dữ liệu
                String rows[] = new String[4];
                rows[0] = result.getString(1); // lấy dữ liệu tại cột số 1 (ứng với mã hàng)
                rows[1] = result.getString(2); // lấy dữ liệu tai cột số 2 ứng với tên hàng
                rows[2] = result.getString(3);
//            rows[3] = result.getString(4); 
                tableModel.addRow(rows); // đưa dòng dữ liệu vào tableModel
                //mỗi lần có sự thay đổi dữ liệu ở tableModel thì Jtable sẽ tự động update
            }
        } catch (SQLException e) {
        }
    }

    //Ham xoa du lieu trong tableModel
    public void ClearData() throws SQLException {
        //Lay chi so dong cuoi cung
        int n = tableModel.getRowCount() - 1;
        for (int i = n; i >= 0; i--) {
            tableModel.removeRow(i);//Remove tung dong
        }
    }

    //Ham xoa cac TextField
    private void setNull() {
        //Xoa trang cac JtextField
        this.txtMaLop.setText(null);
        this.txtSiSoLop.setText(null);
        this.txtTenLop.setText(null);
        this.txtMaLop.requestFocus();
    }

    //Ham khoa cac TextField
    private void setKhoa(boolean a) {
        //Khoa hoac mo khoa cho Cac JTextField
        this.txtMaLop.setEnabled(a);
        this.txtTenLop.setEnabled(!a);
        this.txtSiSoLop.setEditable(!a);
    }

    //Ham khoa cac Button
    private void setButton(boolean a) {
        //Vo hieu hoac co hieu luc cho cac JButton
        this.btnLuuLop.setEnabled(a);
        this.btnXoaLop.setEnabled(a);
        this.btnSuaLop.setEnabled(a);
        this.btnLuuLop.setEnabled(!a);
        this.btnHuyLop.setEnabled(!a);
//     this.btThoat.setEnabled (a);
    }

    private void btnThemLopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemLopActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "Bắt đầu thêm dữ liệu!", "Thông báo", 1);
        setNull();//Xoa trang TextField
        setKhoa(false);//Mo khoa TextField
        setButton(false);//Goi ham khoa cac Button
        txtMaLop.setEnabled(true);
        check = true;//Gan cothem = true de ghi nhan trang thai them moi

    }//GEN-LAST:event_btnThemLopActionPerformed

    public void showTheoMaLop(String ml) throws SQLException {
        ResultSet result = lop.getLop(ml);
        try {
            while (result.next()) { // nếu còn đọc tiếp được một dòng dữ liệu

                txtMaLop.setText(result.getString(1)); // lấy dữ liệu tại cột số 1 (ứng với mã hàng)
                txtTenLop.setText(result.getString(2)); // lấy dữ liệu tai cột số 2 ứng với tên hàng
                txtSiSoLop.setText(result.getString(3));
//            rows[3] = result.getString(4); 
                // đưa dòng dữ liệu vào tableModel
                //mỗi lần có sự thay đổi dữ liệu ở tableModel thì Jtable sẽ tự động update
            }
        } catch (SQLException e) {
        }
    }

    private void tableLopHocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableLopHocMouseClicked
        // TODO add your handling code here:

        //Hien thi du lieu len cac JTextField khi Click chuot vao JTable
        try {
            //Lay chi so dong dang chon
            int row = this.tableLopHoc.getSelectedRow();
            String ml = (this.tableLopHoc.getModel().getValueAt(row, 0)).toString();
            System.out.print(ml);
            showTheoMaLop(ml);//Goi ham lay du lieu theo ma loai
//            showCombobox(ml);
//            if(rs.next())//Neu co du lieu
//            {
//            this.txtMaloai.setText(rs.getString("Maloai"));
//            this.txtTenloai.setText(rs.getString("Tenloai"));
//            }
        } catch (SQLException e) {
        }
    }//GEN-LAST:event_tableLopHocMouseClicked

    private void btnLuuLopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuLopActionPerformed
        // TODO add your handling code here:
        String makhoa = cbbMaKhoa.getSelectedItem().toString();
        String ml = txtMaLop.getText();
        String tl = txtTenLop.getText();
        String ss = txtSiSoLop.getText();

        System.err.println("makhoa: " + makhoa);
        try {
            if (makhoa.equals("") || ml.equals("") || tl.equals("") || ss.equals("")) {
                JOptionPane.showMessageDialog(null, "Vui lòng nhập đầy đủ thông tin!", "Thông báo", 1);
            } else {
                if (Integer.parseInt(ss) < 20) {
                    JOptionPane.showMessageDialog(null, "Ít nhất 20 sinh viên mới được mở lớp!", "Thông báo", 1);
                    txtSiSoLop.requestFocus();
                } else if (Integer.parseInt(ss) > 100) {
                    JOptionPane.showMessageDialog(null, "Số sinh viên tối đa là 100 sinh viên!", "Thông báo", 1);
                } else {
                    int c = Integer.parseInt(ss);
                    try {
                        if (check == true) //Luu cho tthem moi
                        {
                            lop.InsertData(makhoa, ml, tl, c);
                            JOptionPane.showMessageDialog(null, "Thêm thành công!", "Thông báo", 1);
                            setKhoa(false);
                            setButton(true);

                        } else //Luu cho sua
                        {
                            lop.EditData(ml, tl, c, makhoa);
                            JOptionPane.showMessageDialog(null, "Sửa thành công!", "Thông báo", 1);
                            setKhoa(false);
                            setButton(true);
                        }
                        ClearData(); //lúc thêm sẽ add cả table=table+table, nên chúng ta phải xóa bớt 1 table chỉ giữ lại cái cuối cùng
                        ShowData(makhoa); //Do lai du lieu vao Table Model
                    } catch (SQLException ex) {
//                    System.err.println("error: "+ex);
                        JOptionPane.showMessageDialog(null, "Cập nhật dữ liệu thất bại!", "Thông báo", 1);
                    }

                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Sỉ số chỉ nhập số","Thông báo",1);
        }


    }//GEN-LAST:event_btnLuuLopActionPerformed

    private void btnXoaLopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaLopActionPerformed
        // TODO add your handling code here:
        String ma = txtMaLop.getText();
        String makhoa = cbbMaKhoa.getSelectedItem().toString();
        try {
            if (ma.length() == 0) {
                JOptionPane.showMessageDialog(null, "Cần chọn 1 lớp để xoá", "Thông báo", 1);
            } else {
                if (JOptionPane.showConfirmDialog(null, "Bạn muốn xóa không?", "Thông báo", 2) == 0) {
                    lop.DeleteData(ma);//goi ham xoa du lieu theo ma loai
                    JOptionPane.showMessageDialog(null, "Xóa thành công!", "Thông báo", 1);
                    ClearData();//Xoa du lieu trong tableModel
                    ShowData(makhoa);//Do du lieu vao table Model
                    setNull();//Xoa trang Textfield
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(formLop.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnXoaLopActionPerformed

    private void btnSuaLopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaLopActionPerformed
        // TODO add your handling code here:
        String ml = txtMaLop.getText();
        if (ml.length() == 0) //Chua chon Ma loai
        {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn lớp cần sửa", "Thông báo", 1);
        } else {
            setKhoa(false);//Mo khoa cac TextField
            setButton(false); //Khoa cac Button
            txtMaLop.enable(false);
            check = false; //Gan cothem=false de ghi nhan trang thai la sua
        }

    }//GEN-LAST:event_btnSuaLopActionPerformed

    private void btnThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThoatActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnThoatActionPerformed

    private void btnHuyLopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyLopActionPerformed
        // TODO add your handling code here:
        setNull();
        setKhoa(false);
        setButton(true);
    }//GEN-LAST:event_btnHuyLopActionPerformed

    public void showTheoMaKhoa(String ml) throws SQLException {
        ResultSet result = lop.getLopByMaKhoa(ml);
        try {
            ClearData();
            while (result.next()) { // nếu còn đọc tiếp được một dòng dữ liệu
                String rows[] = new String[3];
                rows[0] = result.getString(1); // lấy dữ liệu tại cột số 1 (ứng với mã hàng)
                rows[1] = result.getString(2); // lấy dữ liệu tai cột số 2 ứng với tên hàng
                rows[2] = result.getString(3);
//                rows[3] = result.getString(4);

                //            rows[3] = result.getString(4); 
                tableModel.addRow(rows);
            }
        } catch (SQLException e) {
        }

    }

    private void cbbMaKhoaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbbMaKhoaItemStateChanged
        // TODO add your handling code here:
        System.err.println("chọn: " + cbbMaKhoa.getSelectedItem());
        String makhoa = cbbMaKhoa.getSelectedItem().toString();
        String tenkhoa = null;
        ResultSet ress = null;

        try {
            ress = khoa.getTenKhoa(makhoa);
            while (ress.next()) {
//                makhoa = mk.getString(1);
                txttenkhoa.setText(ress.getString(1));
                showTheoMaKhoa(makhoa);
            }
        } catch (SQLException ex) {
            Logger.getLogger(formLop.class.getName()).log(Level.SEVERE, null, ex);
        }
//            System.err.println("makhoa: "+mk);
    }//GEN-LAST:event_cbbMaKhoaItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws SQLException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(formLop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(formLop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(formLop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(formLop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new formLop().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(formLop.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
//        
//        Connect c = new Connect();
//        c.connectSQL();

//           JOptionPane.showMessageDialog(null, "Successful eee!");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHuyLop;
    private javax.swing.JButton btnLuuLop;
    private javax.swing.JButton btnSuaLop;
    private javax.swing.JButton btnThemLop;
    private javax.swing.JButton btnThoat;
    private javax.swing.JButton btnXoaLop;
    private javax.swing.JComboBox<String> cbbMaKhoa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableLopHoc;
    private javax.swing.JTextField txtMaLop;
    private javax.swing.JTextField txtSiSoLop;
    private javax.swing.JTextField txtTenLop;
    private javax.swing.JTextField txttenkhoa;
    // End of variables declaration//GEN-END:variables
}
