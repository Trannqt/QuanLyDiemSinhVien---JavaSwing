
import java.awt.Image;
import java.io.File;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.awt.print.*;
import java.text.*;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.JTable;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author DUY PC
 */
public class formXemDiemSinhVien extends javax.swing.JFrame {

    /**
     * Creates new form formXemDiemSinhVien
     */
    private final ChiTietSV ctsv = new ChiTietSV();
    private final DefaultTableModel tableModel = new DefaultTableModel();
    private boolean check = true;
    private final XemDiemSinhVien xemdiemsv = new XemDiemSinhVien();

    HocPhan hocphan = new HocPhan();
    public formXemDiemSinhVien() throws SQLException {
        initComponents();
    
        
        String[] colsName = {"Mã sinh viên","Họ và tên", "Mã môn học", "Mã học phần", "Điểm quá trình", "Điểm thi", "Điểm tổng kết", "Kết quả"};
        tableModel.setColumnIdentifiers(colsName);
        tablexemdiemsv.setModel(tableModel);
        ShowData();  
        loadFirst();
        setNull();
        setKhoa(false);
        setButton(true);
        addComboboxMH();
        clearCombobox();
        addComboboxHPTheoMAMH(txtMamh.getSelectedItem().toString());
     
    }  

//    
//
//    /**
//     * This method is called from within the constructor to initialize the form.
//     * WARNING: Do NOT modify this code. The content of this method is always
//     * regenerated by the Form Editor.
//     */
//    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtMahp = new javax.swing.JComboBox();
        txtDiemthi = new javax.swing.JTextField();
        txtDiemTK = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtKQ = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtMasv = new javax.swing.JTextField();
        txtMamh = new javax.swing.JComboBox();
        txtDiemqt = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablexemdiemsv = new javax.swing.JTable();
        txtSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        label_Image = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        printbtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Xem điểm sinh viên");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("TRA CỨU ĐIỂM SINH VIÊN");

        txtMahp.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                txtMahpItemStateChanged(evt);
            }
        });

        jLabel9.setText("Kết quả");

        jLabel10.setText("Mã sinh viên");

        jLabel11.setText("Mã môn học");

        jLabel12.setText("Mã học phần");

        jLabel13.setText("Điểm quá trình");

        jLabel14.setText("Điểm thi");

        jLabel15.setText("Điểm tổng kết");

        txtMamh.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                txtMamhItemStateChanged(evt);
            }
        });
        txtMamh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMamhActionPerformed(evt);
            }
        });

        tablexemdiemsv.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablexemdiemsv.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablexemdiemsvMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablexemdiemsv);

        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Start-Menu-Search-icon-16.png"))); // NOI18N
        btnSearch.setText("Tìm kiếm");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/clipboard-sign-out-icon-16.png"))); // NOI18N
        jButton1.setText("Thoát");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        printbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Printer-blue-icon.png"))); // NOI18N
        printbtn.setText("In");
        printbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(378, 378, 378))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(156, Short.MAX_VALUE)
                .addComponent(label_Image, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel12)
                            .addComponent(jLabel9))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(214, 214, 214)
                                .addComponent(jLabel13)
                                .addGap(27, 27, 27)
                                .addComponent(txtDiemqt))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtMamh, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(115, 115, 115))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(txtMasv, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtMahp, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(76, 76, 76)
                                                .addComponent(jLabel14))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGap(50, 50, 50)
                                                .addComponent(jLabel15)))))
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtDiemthi, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtDiemTK, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtKQ))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 477, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnSearch))
                            .addComponent(jLabel11))))
                .addContainerGap(157, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(29, 29, 29)
                .addComponent(printbtn)
                .addGap(324, 324, 324))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton1, printbtn});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSearch))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel13)
                                    .addComponent(txtDiemqt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtMasv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel14)
                                    .addComponent(txtDiemthi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel15)
                                    .addComponent(txtDiemTK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtMahp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel11)
                                .addComponent(txtMamh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtKQ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(label_Image, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(printbtn))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButton1, printbtn});

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void loadFirst() throws SQLException {
        
//        ResultSet result = ctsv.getSVByID(masv, mamh, mahp);
//            try {
//                while (result.next()) { // nếu còn đọc tiếp được một dòng dữ liệu
//                    
//                    txtMasv.setText(result.getString(1)); // lấy dữ liệu tại cột số 1 (ứng với mã hàng)
//                    txtSearch.setText(result.getString(2));
//                    showImage(result.getString(3));
//                    String mh = result.getString(4); // lấy dữ liệu tai cột số 2 ứng với tên hàng
//                    String hp = result.getString(5);
//                    txtDiemqt.setText(result.getString(6));
//                    txtDiemthi.setText(result.getString(7));
//                    txtDiemTK.setText(result.getString(8));
//                    String kq = result.getString(9);
//                    System.err.println("KQ: "+kq);
//                    if(kq.equals("1"))
//                    txtKQ.setText("Đậu");
//                    else txtKQ.setText("Rớt");
//
//                    //                    txtKQ.setText(result.getString(7));
//                    showCbMH(mh);
//                    showCbHP(hp);
//                    //            rows[3] = result.getString(4);
//                    // đưa dòng dữ liệu vào tableModel
//                    //mỗi lần có sự thay đổi dữ liệu ở tableModel thì Jtable sẽ tự động update
//                }
//            } catch (SQLException e) {
//                System.err.println("Khong co gi");
//            }
            
        String urlimage = null;
//        String masv = null;
        ResultSet result = xemdiemsv.getSVTop1();
       while(result.next()){
           txtMasv.setText(result.getString(1)); // lấy dữ liệu tại cột số 1 (ứng với mã hàng)
            txtSearch.setText(result.getString(2));
            showImage(result.getString(3));
            String mh = result.getString(4); // lấy dữ liệu tai cột số 2 ứng với tên hàng
            String hp = result.getString(5);
            txtDiemqt.setText(result.getString(6));
            txtDiemthi.setText(result.getString(7));
            txtDiemTK.setText(result.getString(8));
            String kq = result.getString(9);
            System.err.println("KQ: "+kq);
            if(kq.equals("1"))
            txtKQ.setText("Đậu");
            else txtKQ.setText("Rớt");

            //                    txtKQ.setText(result.getString(7));
            showCbMH(mh);
            showCbHP(hp);
       }

    }
    public String[] getImages() {
        File file;
        file = new File(getClass().getResource("/Images").getFile());
        String[] imgList = file.list();

        return imgList;
    }

    public String getImage(String img) {
        File file;
        file = new File(getClass().getResource("/Images").getFile());
        String[] imgList = file.list();
        for(int i=0;i<imgList.length;i++){          
            String imgName = imgList[i];
            if(imgName.equals(img)){
                return imgName;
            }
        }

        return null;
    }

    public void showImage(String img) {
//        String[] imgList = getImages();
//        String imgName = imgList[index];
//        ImageIcon icon = new ImageIcon(getClass().getResource("/Images/"+imgName));
//        Image image = icon.getImage().getScaledInstance(label_Image.getWidth(), label_Image.getHeight(), Image.SCALE_SMOOTH);
//        label_Image.setIcon(new ImageIcon(image));

        String imgName = getImage(img);
        ImageIcon icon = new ImageIcon(getClass().getResource("/Images/" + imgName));
        Image image = icon.getImage().getScaledInstance(label_Image.getWidth(), label_Image.getHeight(), Image.SCALE_SMOOTH);
        label_Image.setIcon(new ImageIcon(image));

    }

    public void ShowData() throws SQLException {
        String urlimage = null;
        ResultSet result = xemdiemsv.getSV();
        
        try {
            while (result.next()) { // nếu còn đọc tiếp được một dòng dữ liệu
                String rows[] = new String[9];
                rows[0] = result.getString(1); // lấy dữ liệu tại cột số 1 (ứng với mã hàng)      
                rows[1] = result.getString(2); // lấy dữ liệu tai cột số 2 ứng với tên hàng
                urlimage = result.getString(3);
                rows[2] = result.getString(4); //ma mon hoc
                rows[3] = result.getString(5); //ma hoc phan
                rows[4] = result.getString(6); //diem qua trinh              
                rows[5] = result.getString(7); //diem thi
                String c; 
                c = rows[6] = result.getString(8); //diem tong ket
                if(result.getString(9).equals("0"))
                rows[7] = "Rớt";   // ket qua
                else rows[7]="Đậu";
                
                //            rows[3] = result.getString(4); 
                tableModel.addRow(rows); // đưa dòng dữ liệu vào tableModel
                //mỗi lần có sự thay đổi dữ liệu ở tableModel thì Jtable sẽ tự động update
//                urlimage = result.getString(3);

//                ImageIcon icon = new ImageIcon(getClass().getResource("/Images/"+urlimage));
//            Image image = icon.getImage().getScaledInstance(label_Image.getWidth(), label_Image.getHeight(), Image.SCALE_SMOOTH);
//            label_Image.setIcon(new ImageIcon(image));
//                showImage(urlimage);
            }
        } catch (SQLException e) {
        }

//        showImage("myHien.jpg");
        if (urlimage != null) {
            System.err.println("link: " + getImage(urlimage));
            try{
            showImage(urlimage);
            }
            catch(Exception e){
//                JOptionPane.showMessageDialog(this, "Sinh viên chưa có ảnh","Thông báo",1);
                System.err.println("có 1 sv ko có ảnh");
            }
        }
    }
    
    private void txtMamhItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_txtMamhItemStateChanged
        // TODO add your handling code here:
        clearCombobox();
        String mamh = txtMamh.getSelectedItem().toString();

        ResultSet res = null;
        try {
            res = hocphan.ShowMaHocPhanTheoMH(mamh);
        } catch (SQLException ex) {
            Logger.getLogger(ChiTietSinhVien.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            while(res.next()){
                txtMahp.addItem(res.getString(1));
            }
        } catch (SQLException ex) {
            Logger.getLogger(ChiTietSinhVien.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtMamhItemStateChanged

    private void txtMamhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMamhActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_txtMamhActionPerformed

    private void tablexemdiemsvMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablexemdiemsvMouseClicked
        // TODO add your handling code here:
        //Hien thi du lieu len cac JTextField khi Click chuot vao JTable

        try {
            //Lay chi so dong dang chon
            int row = this.tablexemdiemsv.getSelectedRow();
            String masv = (this.tablexemdiemsv.getModel().getValueAt(row, 0)).toString();
            String mamh = (this.tablexemdiemsv.getModel().getValueAt(row, 2)).toString();
            String mahp = (this.tablexemdiemsv.getModel().getValueAt(row, 3)).toString();
            System.out.println(masv + " " + mamh + " " + mahp);

            //            showTheoMa(masv,mamh,mahp);//Goi ham lay du lieu theo ma loai
            ResultSet result = ctsv.getSVByID(masv, mamh, mahp);
            try {
                while (result.next()) { // nếu còn đọc tiếp được một dòng dữ liệu
                    
                    txtMasv.setText(result.getString(1)); // lấy dữ liệu tại cột số 1 (ứng với mã hàng)
                    txtSearch.setText(result.getString(2));
                    showImage(result.getString(3));
                    String mh = result.getString(4); // lấy dữ liệu tai cột số 2 ứng với tên hàng
                    String hp = result.getString(5);
                    txtDiemqt.setText(result.getString(6));
                    txtDiemthi.setText(result.getString(7));
                    txtDiemTK.setText(result.getString(8));
                    String kq = result.getString(9);
                    System.err.println("KQ: "+kq);
                    if(kq.equals("1"))
                    txtKQ.setText("Đậu");
                    else txtKQ.setText("Rớt");

                    //                    txtKQ.setText(result.getString(7));
                    showCbMH(mh);
                    showCbHP(hp);
                    //            rows[3] = result.getString(4);
                    // đưa dòng dữ liệu vào tableModel
                    //mỗi lần có sự thay đổi dữ liệu ở tableModel thì Jtable sẽ tự động update
                }
            } catch (SQLException e) {
                System.err.println("Khong co gi");
            }
        } catch (SQLException e) {
        }

    }//GEN-LAST:event_tablexemdiemsvMouseClicked

    private void txtMahpItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_txtMahpItemStateChanged
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_txtMahpItemStateChanged

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        String urlimage=null;
        ResultSet result = null;
       
        try {
            result = xemdiemsv.SearchData(txtSearch.getText());
        } catch (SQLException ex) {
            Logger.getLogger(formXemDiemSinhVien.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            ClearData();
            while (result.next()) { // nếu còn đọc tiếp được một dòng dữ liệu
                String rows[] = new String[9];
                rows[0] = result.getString(1); // lấy dữ liệu tại cột số 1 (ứng với mã hàng)
                rows[1] = result.getString(2); // lấy dữ liệu tai cột số 2 ứng với tên hàng
                urlimage = result.getString(3);
                rows[2] = result.getString(4);
                rows[3] = result.getString(5);
                rows[4] = result.getString(6);
                rows[5] = result.getString(7);
                rows[6] = result.getString(8);
                if(result.getString(9).equals("0"))
                    rows[7] = "Rớt";
                else rows[7]="Đậu";
                
                //            rows[3] = result.getString(4);
                tableModel.addRow(rows);
            }
        } catch (SQLException ex) {
            Logger.getLogger(formXemDiemSinhVien.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnSearchActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        dispose();
                
    }//GEN-LAST:event_jButton1ActionPerformed

    private void printbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printbtnActionPerformed
        // TODO add your handling code here:
        MessageFormat header = new MessageFormat("Điểm sinh viên");
        Calendar cal = new GregorianCalendar();
        int month =cal.get(Calendar.MONTH);
        int year =cal.get(Calendar.YEAR);
        int day =cal.get(Calendar.DAY_OF_MONTH);
               
        MessageFormat footer = new MessageFormat("Page{0, number, integer}");
        try{
            tablexemdiemsv.print(JTable.PrintMode.NORMAL, header, footer);
        }
        catch(java.awt.print.PrinterException e) {
            System.err.format("cannot print ", e.getMessage());
        }
    }//GEN-LAST:event_printbtnActionPerformed
    
    
    public void addComboboxMH() throws SQLException{
        MonHoc monhoc = new MonHoc();
        ResultSet res = monhoc.ShowMaMonHoc();
        while(res.next()){
            txtMamh.addItem(res.getString(1));
        }
    }
    
    public void showComboboxMH(String mamh) throws SQLException{
        for(int i=0;i<txtMamh.getItemCount();i++){
            if(txtMamh.getItemAt(i).equals(mamh)){
                txtMamh.setSelectedIndex(i);
                System.err.println(txtMamh.getItemAt(i)+"");
                return;
            }
        }
    }
    
    
    public void addComboboxHPTheoMAMH(String mamh) throws SQLException{
        clearCombobox();
//        String mamh = txtMamh.getSelectedItem().toString();
        HocPhan hocphan = new HocPhan();
        ResultSet res = null;
        try {
            res = hocphan.ShowMaHocPhanTheoMH(mamh);
        } catch (SQLException ex) {
            Logger.getLogger(ChiTietSinhVien.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            while(res.next()){
                txtMahp.addItem(res.getString(1));
            }
        } catch (SQLException ex) {
            Logger.getLogger(ChiTietSinhVien.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    public void clearCombobox(){
        txtMahp.removeAllItems();
    }
    public void showComboboxHP(String mahp) throws SQLException{
        for(int i=0;i<txtMahp.getItemCount();i++){
            if(txtMahp.getItemAt(i).equals(mahp)){
                txtMahp.setSelectedIndex(i);
                System.err.println(txtMahp.getItemAt(i)+"");
                return;
            }
        }
    }

//    public void ShowData() throws SQLException {
////        System.out.println(mssv);
//        ResultSet result = ctsv.showDiemSVs(txtMasv.getText());
//        try {
//            while (result.next()) { // nếu còn đọc tiếp được một dòng dữ liệu
//                String rows[] = new String[7];
//                rows[0] = result.getString(1); // lấy dữ liệu tại cột số 1 (ứng với mã hàng)
//                rows[1] = result.getString(2); // lấy dữ liệu tai cột số 2 ứng với tên hàng
//                rows[2] = result.getString(3);
//                rows[3] = result.getString(4);
//                rows[4] = result.getString(5);
//                rows[5] = result.getString(6);
//                if(result.getString(7).equals("1"))
//                    rows[6] = "Đậu" ;
//                else rows[6] = "Rớt";
//                
////                rows[6] = result.getString(7); 
////                rows[7] = result.getString(8); 
////                System.out.print(rows[4]);
//                //            rows[3] = result.getString(4); 
//                tableModel.addRow(rows); // đưa dòng dữ liệu vào tableModel
//                //mỗi lần có sự thay đổi dữ liệu ở tableModel thì Jtable sẽ tự động update
//            }
//        } catch (SQLException e) {
//        }
//    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
                      

    public void showTheoMa(String masv, String mamh, String mahp) throws SQLException {
        ResultSet result = ctsv.getSVByID(masv, mamh, mahp);
        try {
            while (result.next()) { // nếu còn đọc tiếp được một dòng dữ liệu

                txtMasv.setText(result.getString(1)); // lấy dữ liệu tại cột số 1 (ứng với mã hàng)
//                txtMamh.getSelectedItem(result.getString(2)); // lấy dữ liệu tai cột số 2 ứng với tên hàng
//                txtMahp.setText(result.getString(3));
                txtDiemqt.setText(result.getString(4));
                txtDiemthi.setText(result.getString(5));
                txtDiemTK.setText(result.getString(6));
                txtKQ.setText(result.getString(7));

    //            rows[3] = result.getString(4); 
                // đưa dòng dữ liệu vào tableModel
                //mỗi lần có sự thay đổi dữ liệu ở tableModel thì Jtable sẽ tự động update
            }
        } catch (SQLException e) {
        }
    }
    
    public void showCbMH(String mh) throws SQLException{
        for(int i=0;i<txtMamh.getItemCount();i++){
            if(txtMamh.getItemAt(i).equals(mh)){
                txtMamh.setSelectedIndex(i);
                System.err.println(txtMamh.getItemAt(i)+"");
                return;
            }
        }
    }
    
    public void showCbHP(String hp) throws SQLException{
        for(int i=0;i<txtMahp.getItemCount();i++){
            if(txtMahp.getItemAt(i).equals(hp)){
                txtMahp.setSelectedIndex(i);
                System.err.println(txtMahp.getItemAt(i)+"");
                return;
            }
        }
    }

    //Ham xoa du lieu trong tableModel
    public void ClearData() throws SQLException {
        //Lay chi so dong cuoi cung
        int n = tableModel.getRowCount() - 1;
        for (int i = n; i >= 0; i--) {
            tableModel.removeRow(i);//Remove tung dong
        }
    }

    //Ham xoa cac TextField

    private void setNull() {
        //Xoa trang cac JtextField
        this.txtDiemTK.setText(null);
        this.txtDiemqt.setText(null);
        this.txtDiemthi.setText(null);
        this.txtKQ.setText(null);
//        this.txtMahp.setText(null);
//        this.txtMamh.setText(null);
//        this.txtMasv.setText(null);

    }

    //Ham khoa cac TextField

    private void setKhoa(boolean a) {
        //Khoa hoac mo khoa cho Cac JTextField
//        this.txtDiemTK.setEnabled(!a);
        this.txtDiemqt.setEnabled(!a);
        this.txtDiemthi.setEnabled(!a);
//        this.txtKQ.setEnabled(!a);
//        this.txtMahp.setEnabled(!a);
        this.txtMasv.setEnabled(!a);
    }

    //Ham khoa cac Button

    private void setButton(boolean a) {
        //Vo hieu hoac co hieu luc cho cac JButton
//        this.btnLuu.setEnabled(a);
////        this.btnXoa.setEnabled (a);
//        this.btnSua.setEnabled(a);
//        this.btnLuu.setEnabled(!a);
//        this.btnKhongluu.setEnabled(!a);
//     this.btThoat.setEnabled (a);
    }


    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // TODO add your handling code here:

        String masv = txtMasv.getText();
        String mamh = txtMamh.getSelectedItem().toString();
        String mahp = txtMahp.getSelectedItem().toString();

        if (masv.length() == 0 || mamh.length() == 0 || mahp.length() == 0) //Chua chon Ma loai
        {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn sinh viên cần sửa", "Thông báo", 1);
        } else {
            setKhoa(false);//Mo khoa cac TextField
            setButton(false); //Khoa cac Button
            txtMasv.enable(false);
            txtMahp.enable(false);
            txtMamh.enable(false);
            check = false; //Gan cothem=false de ghi nhan trang thai la sua
        }

    }                                      

    private void btnLuuActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // TODO add your handling code here:
        String masv = txtMasv.getText();
        String mamh = txtMamh.getSelectedItem().toString();
        String mahp = txtMahp.getSelectedItem().toString();
        float diemqt = Float.parseFloat(txtDiemqt.getText());
        float diemthi = Float.parseFloat(txtDiemthi.getText());
        float ptqt=0;
        HocPhan hp = new HocPhan();
        try {
            ResultSet res = hp.getPTQT(mahp);
            while(res.next()){
                ptqt = Float.parseFloat(res.getString(1));
            }
        } catch (SQLException ex) {
            Logger.getLogger(ChiTietSinhVien.class.getName()).log(Level.SEVERE, null, ex);
        }
       
        System.err.println(ptqt+" ");
        
     
        
        float diemtk = (diemqt*(ptqt/100))+(diemthi*(100-ptqt)/100);
        System.err.println(diemtk);
               
        int kq;
        if(diemtk<4.0)
            kq = 0;
        else
            kq=1;

        if (masv.length() == 0 || mamh.length() == 0 || mahp.length() == 0) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập đầy đủ thông tin!", "Thông báo", 1);
        } else {
            try {
                if (check == true) //Luu cho tthem moi
                {
                    ctsv.InsertData(masv, mamh, mahp, diemqt, diemthi, diemtk, kq);
                    JOptionPane.showMessageDialog(null, "Thêm thành công!", "Thông báo", 1);
                } else //Luu cho sua
                {
                    ctsv.EditData(masv, mamh, mahp, diemqt, diemthi, diemtk, kq);
                    JOptionPane.showMessageDialog(null, "Sửa thành công!", "Thông báo", 1);
                }

                ClearData(); //lúc thêm sẽ add cả table=table+table, nên chúng ta phải xóa bớt 1 table chỉ giữ lại cái cuối cùng
                ShowData(); //Do lai du lieu vao Table Model
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Cập nhật dữ liệu thất bại!", "Thông báo", 1);
            }
            setKhoa(false);
            setButton(true);
        }


    }                                      

    private void btnKhongluuActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
        txtMahp.enable(true);
        txtMamh.enable(true);
        setNull();
        setKhoa(false);
        setButton(true);
    }                                           

                                   
                         

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // TODO add your handling code here:
        String ma = txtMasv.getText();
        String mamh = txtMamh.getSelectedItem().toString();
        String mahp = txtMahp.getSelectedItem().toString();
        try {
            if (ma.length() == 0) {
                JOptionPane.showMessageDialog(null, "Cần chọn 1 sinh viên để xoá", "Thông báo", 1);
            } else {
                if (JOptionPane.showConfirmDialog(null, "Bạn muốn xóa không?", "Thông báo", 2) == 0) {
                    ctsv.DeleteData(ma, mamh, mahp);//goi ham xoa du lieu theo ma loai
                    JOptionPane.showMessageDialog(null, "Xóa thành công!", "Thông báo", 1);
                    ClearData();//Xoa du lieu trong tableModel
                    ShowData();//Do du lieu vao table Model
                    setNull();//Xoa trang Textfield
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(formMonHoc.class.getName()).log(Level.SEVERE, null, ex);
        }
    }                                      

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {                                        

        // TODO add your handling code here:
        setNull();//Xoa trang TextField
        setKhoa(false);//Mo khoa TextField
        setButton(false);//Goi ham khoa cac Button
        txtMasv.enable(false);
        check = true;//Gan cothem = true de ghi nhan trang thai them moi

    }  
        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(formXemDiemSinhVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(formXemDiemSinhVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(formXemDiemSinhVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(formXemDiemSinhVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new formXemDiemSinhVien().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(formXemDiemSinhVien.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel label_Image;
    private javax.swing.JButton printbtn;
    private javax.swing.JTable tablexemdiemsv;
    private javax.swing.JTextField txtDiemTK;
    private javax.swing.JTextField txtDiemqt;
    private javax.swing.JTextField txtDiemthi;
    private javax.swing.JTextField txtKQ;
    private javax.swing.JComboBox txtMahp;
    private javax.swing.JComboBox txtMamh;
    private javax.swing.JTextField txtMasv;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
